---
title: "ACR TI-RADS Calculator"
subtitle: "A Calculator for Thyroid Imaging Reporting & Data System"
author: "Kittipos Sirivongrungson"
date: "`r Sys.Date()`"
theme: flatly
toc: true
css: "css/style.css"
format: 
  html:
    code-tools: 
      source: https://github.com/Lightbridge-KS/tirads-calc
server: shiny
bibliography: references.bib
csl: elsevier-with-titles.csl
---

```{r setup, include=FALSE}
# pak::pkg_install("Lightbridge-KS/radcalc")
library(shiny)
library(purrr)
width_choices <- "400px"
```

```{r tirads_choices}
tirads_choices <- list(
  composition = c(
    "Cystic or almost completely cystic (0)" = "cystic",
    "Spongiform (0)" = "spongiform",
    "Mixed cystic and solid (1)" = "mixed",
    "Solid or almost completely solid (2)" = "solid"
  ),
  echogenicity = c(
    "Anechoic (0)" = "an",
    "Hyperechoic or Isoechoic (1)" = "hyper",
    "Hypoechoic (2)" = "hypo",
    "Very hypoechoic (3)" = "very-hypo"
  ),
  shape = c(
    "Wider-than-tall (0)" = "wider",
    "Taller-than-wide (3)" = "taller"
  ),
  margin = c(
    "Smooth (0)" = "smooth",
    "Ill-defined (0)" = "ill-defined",
    "Lobulated or Irregular (2)" = "lobulated",
    "Extrathyroidal extension (3)" = "extra"
  ),
  echogenic_foci = c(
    "None or Large comet-tail artifacts (0)" = "none",
    "Macrocalcification (1)" = "macro-calc",
    "Rim calcification (2)" = "rim-calc",
    "Punctate echogenic foci (3)" = "punctate"
  )
)
```

```{r tirads_choices_inv}
# Invert Names
tirads_choices_inv <- tirads_choices |>  purrr::map(~setNames(names(.x), .x))
```

::: callout-note
### About

This calculator was implemented from [ACR TI-RADS‚Ñ¢](https://www.acr.org/Clinical-Resources/Reporting-and-Data-Systems/TI-RADS) for thyroid ultrasound.
:::

## Charts

![ACR TI-RADS Chart to determine TI-RADS Level and Suggestions [@ACR-TIRADS-WhitePaper]](images/tirads-chart.png){#fig-tirads-chart width="80%"}



## Categories

### Composition

::: {.panel-tabset}
#### ‚úÖ
```{r radioButtons-composition}
radioButtons("composition", "", 
             choices = tirads_choices$composition,
             selected = character(0), 
             width = width_choices)
```

#### üèû

![**Composition** (adapted from [@RadAssist])](./images/composition.png){#fig-composition width="80%"}

- **Spongiform:** aggregation of multiple microcystic components ‚â• 50% of the volume of the nodule [@ACR-TIRADS-Lexicon].

:::



### Echogenicity

::: {.panel-tabset}
#### ‚úÖ
```{r radioButtons-echogenicity}
radioButtons("echogenicity", "", 
             choices = tirads_choices$echogenicity,
             selected = character(0),
             width = width_choices)
```

#### üèû

![**Echogenicity** (adapted from [@RadAssist; @RadKey-ThyroidCyst])](./images/echogenicity.png){#fig-echogenicity width="100%"}

- **Hyper/iso/hypoechoic:** relative to surrounding *thyroid tissue* [@ACR-TIRADS-Lexicon].
  
- **Very hypoechoic:** hypoechoic relative to adjacent *neck musculature* [@ACR-TIRADS-Lexicon].

:::



### Shape

::: {.panel-tabset}
#### ‚úÖ
```{r radioButtons-shape}
radioButtons("shape", "", choices = tirads_choices$shape, 
             selected = character(0),
             width = width_choices)
```

#### üèû

![**Shape: taller-than-wide** [@ACR-TIRADS-Lexicon]](./images/shape.png){#fig-shape width="80%"}

- **taller-than-wide:** ratio of `AP / horizontal diameter > 1` when measured in the transverse plane [@ACR-TIRADS-Lexicon].

:::



### Margin

::: {.panel-tabset}
#### ‚úÖ
```{r radioButtons-margin}
radioButtons("margin", "", choices = tirads_choices$margin,
             selected = character(0),
             width = width_choices)
```

#### üèû

![**Margin** [@ACR-TIRADS-Lexicon; @ACR-TIRADS-UserGuide; @RadAssist]](./images/margin.png){#fig-margin width="80%"} 

**Definition** [@ACR-TIRADS-Lexicon]

- **Smooth:** uninterrupted, well-defined, curvilinear edge typically forming a spherical or elliptical shape.

- **Irregular margin:** spiculated, jagged, or with sharp angles with or without clear soft tissue protrusions into the parenchyma.

- **Lobulated:** border has focal rounded soft tissue protrusions that extend into the adjacent parenchyma.

- **Ill-defined:** border of the nodule is difficult to distinguish from thyroid parenchyma; the nodule lacks irregular or lobulated margins.

- **Extrathyroidal extension:** nodule extends through the thyroid capsule.

:::

### Echogenic foci

```{r checkboxGroupInput-echogenic_foci}
checkboxGroupInput("echogenic_foci", tags$b("Echogenic foci"), 
                   choices = tirads_choices$echogenic_foci, 
                   selected = character(0),
                   width = width_choices)
```



### Size (cm)

```{r}
numericInput("size_cm", NULL, value = NA, min = 0)
```

::: {.callout-tip collapse="true"}
#### How to measure size ?

Use maximal diameter in longitudinal, AP, or transverse plane [@ACR-TIRADS-Lexicon].
:::


## Results

::: results-main
```{r ui-tirads_lv}
uiOutput("tirads_lv")
```
:::

```{r ui-points_df}
gt::gt_output("points_df")
```

```{r ui-suggest}
uiOutput("suggest")
uiOutput("suggest_FNA")
uiOutput("suggest_follow")
```



```{r ui-raw}
# verbatimTextOutput("raw")
```

```{r server-test}
#| context: server

# output$raw <- renderPrint(list(
#   composition = input$composition,
#   echogenicity = input$echogenicity,
#   shape = input$shape,
#   margin = input$margin,
#   echogenic_foci = input$echogenic_foci,
#   size_cm = input$size_cm
# ))


  tirads_report <- reactive({

    req(input$composition, input$echogenicity,
        input$shape, input$margin, input$echogenic_foci)

    radcalc::TIRADS_calc(
      composition = input$composition,
      echogenicity = input$echogenicity,
      shape = input$shape,
      margin = input$margin,
      echogenic_foci = input$echogenic_foci,
      size_cm = input$size_cm
    )
  })


  ## TIRADS Level
  output$tirads_lv <- renderUI({

    tags$code(paste0(names(tirads_report()$level), ": ", tirads_report()$level))

  })

  ## GT Table: Total Points
  output$points_df <- gt::render_gt(
    {
      points <- tirads_report()$points
      points_w_sum <- c(points, total = sum(points))

      points_w_sum |>
        setNames(c(
          "Composition", "Echogenicity",
          "Shape", "Margin", "Echogenic foci", "Total"
        )) |>
        tibble::enframe("Categories", "Points") |>
        gt::gt() |>
        gt::tab_style(
          style = list(
            gt::cell_text(weight = "bold")
          ),
          locations = gt::cells_body(
            columns = everything(),
            rows = 6
          )
        ) |>
        gt::tab_style(
          style = list(
            gt::cell_text(weight = "bold")
          ),
          locations = gt::cells_column_labels()
        )
    },
    align = "left"
  )

  ## Suggestions
  output$suggest <- renderUI({
    should_FNA <- tirads_report()$should_FNA
    should_follow <- tirads_report()$should_follow

    # Eval if neither is `NA`
    req( !any(is.na(c(should_FNA, should_follow)) ))


    li_fna <- if(should_FNA) {
      tags$li("FNA is advised.")
    } else {
      tags$li("FNA is NOT advised.")
    }

    li_follow <- if(should_follow) {
      tags$li("Follow-up is advised.")
    } else {
      NULL
    }

    tagList(
      tags$h3("Suggestion"),
      tags$ul(
        li_follow,
        li_fna
      )
    )
  })
```

```{r server-report}


# output$report_raw <- renderPrint(tirads_report())

```


